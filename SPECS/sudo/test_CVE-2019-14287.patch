--- a/lib/util/regress/atofoo/atofoo_test.c	2019-10-15 13:10:09.649814968 +0530
+++ b/lib/util/regress/atofoo/atofoo_test.c	2019-10-15 14:40:46.229949998 +0530
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Todd C. Miller <Todd.Miller@sudo.ws>
+ * Copyright (c) 2014-2019 Todd C. Miller <Todd.Miller@sudo.ws>
  *
  * Permission to use, copy, modify, and distribute this software for any
  * purpose with or without fee is hereby granted, provided that the above
@@ -24,6 +24,7 @@
 #else
 # include "compat/stdbool.h"
 #endif
+#include <errno.h>
 
 #include "sudo_compat.h"
 #include "sudo_util.h"
@@ -78,15 +79,20 @@ static struct strtoid_data {
     id_t id;
     const char *sep;
     const char *ep;
+    int errnum;
 } strtoid_data[] = {
-    { "0,1", 0, ",", "," },
-    { "10", 10, NULL, NULL },
-    { "-2", -2, NULL, NULL },
+    { "0,1", 0, ",", ",", 0 },
+    { "10", 10, NULL, NULL, 0 },
+    { "-1", 0, NULL, NULL, EINVAL },
+    { "4294967295", 0, NULL, NULL, EINVAL },
+    { "4294967296", 0, NULL, NULL, ERANGE },
+    { "-2147483649", 0, NULL, NULL, ERANGE },
+    { "-2", -2, NULL, NULL, 0 },
 #if SIZEOF_ID_T != SIZEOF_LONG_LONG
-    { "-2", 4294967294U, NULL, NULL },
+    { "-2", (id_t)4294967294U, NULL, NULL, 0 },
 #endif
-    { "4294967294", 4294967294U, NULL, NULL },
-    { NULL, 0, NULL, NULL }
+    { "4294967294", (id_t)4294967294U, NULL, NULL, 0 },
+    { NULL, 0, NULL, NULL, 0 }
 };
 
 static int
@@ -99,22 +105,34 @@ test_strtoid(int *ntests)
     id_t value;
 
     for (d = strtoid_data; d->idstr != NULL; d++) {
-	(*ntests)++;
-	errstr = "some error";
-	value = sudo_strtoid(d->idstr, d->sep, &ep, &errstr);
-	if (errstr != NULL) {
-	    if (d->id != (id_t)-1) {
-		sudo_warnx_nodebug("FAIL: %s: %s", d->idstr, errstr);
-		errors++;
-	    }
-	} else if (value != d->id) {
-	    sudo_warnx_nodebug("FAIL: %s != %u", d->idstr, (unsigned int)d->id);
-	    errors++;
-	} else if (d->ep != NULL && ep[0] != d->ep[0]) {
-	    sudo_warnx_nodebug("FAIL: ep[0] %d != %d", (int)(unsigned char)ep[0],
-		(int)(unsigned char)d->ep[0]);
-	    errors++;
-	}
+		(*ntests)++;
+		errstr = "some error";
+		value = sudo_strtoid(d->idstr, d->sep, &ep, &errstr);
+		if (d->errnum != 0) {
+		    if (errstr == NULL) {
+			sudo_warnx_nodebug("FAIL: %s: missing errstr for errno %d",
+			    d->idstr, d->errnum);
+			errors++;
+		    } else if (value != 0) {
+			sudo_warnx_nodebug("FAIL: %s should return 0 on error",
+			    d->idstr);
+			errors++;
+		    } else if (errno != d->errnum) {
+			sudo_warnx_nodebug("FAIL: %s: errno mismatch, %d != %d",
+		    	d->idstr, errno, d->errnum);
+			errors++;
+		    }
+		} else if (errstr != NULL) {
+	    	sudo_warnx_nodebug("FAIL: %s: %s", d->idstr, errstr);
+	    	errors++;
+		} else if (value != d->id) {
+		    sudo_warnx_nodebug("FAIL: %s != %u", d->idstr, (unsigned int)d->id);
+	    	errors++;
+		} else if (d->ep != NULL && ep[0] != d->ep[0]) {
+		    sudo_warnx_nodebug("FAIL: ep[0] %d != %d", (int)(unsigned char)ep[0],
+			(int)(unsigned char)d->ep[0]);
+		    errors++;
+		}
     }
 
     return errors;
--- a/plugins/sudoers/regress/testsudoers/test5.out.ok	2019-10-15 13:10:22.625815290 +0530
+++ b/plugins/sudoers/regress/testsudoers/test5.out.ok	2019-10-15 13:30:25.929845177 +0530
@@ -4,7 +4,7 @@ Parse error in sudoers near line 1.
 Entries for user root:
 
 Command unmatched
-testsudoers: test5.inc should be owned by gid 4294967295
+testsudoers: test5.inc should be owned by gid 4294967294
 Parse error in sudoers near line 1.
 
 Entries for user root:
--- a/plugins/sudoers/regress/testsudoers/test5.sh	2019-10-15 13:10:30.909815496 +0530
+++ b/plugins/sudoers/regress/testsudoers/test5.sh	2019-10-15 13:31:10.909846294 +0530
@@ -24,7 +24,7 @@ EOF
 
 # Test group writable
 chmod 664 $TESTFILE
-./testsudoers -U $MYUID -G -1 root id <<EOF
+./testsudoers -U $MYUID -G -2 root id <<EOF
 #include $TESTFILE
 EOF
 
